{"version":3,"sources":["util.ts","WordCloud.js","RecordTable.js","KeywordCrumb.js","KeywordList.ts","Dataloader.ts","TopBar.js","WordChart.js","App.js","serviceWorker.js","index.js"],"names":["commaFormat","x","Number","isNaN","parts","toFixed","split","replace","join","KMFormat","suffix","toPrecision","WordCloud","props","callbacks","getWordTooltip","word","text","value","onWordClick","getCallback","bind","onWordMouseOut","onWordMouseOver","options","fontFamily","fontSizes","fontStyle","fontWeight","scale","deterministic","rotations","rotationAngles","transitionDuration","state","words","this","dataloader","addWordsCallback","setWords","style","callback","event","isActive","element","target","select","on","keywordlist","addWord","transition","attr","setState","Component","records","order","orderBy","addRecordCallback","setRecords","property","isAsc","isDesc","Paper","TableContainer","height","Table","stickyHeader","size","aria-label","onRequestSort","handleRequestSort","TableBody","stableSort","map","row","index","TableRow","key","TableCell","Date","date","toDateString","department","description","amount","TableFooter","position","bottom","backgroundColor","borderTop","borderTopColor","align","reduce","prev","curr","comparator","a","b","array","getComparator","stabilizedThis","el","sort","headCells","id","label","RecordTableHead","TableHead","headCell","sortDirection","TableSortLabel","active","direction","onClick","createSortHandler","KeywordCrumb","numList","amounts","addAmountCallback","changeList","list","getList","Breadcrumbs","separator","Link","color","reset","slice","sliceWord","length","Typography","new_length","amount_list","concat","KeywordList","push","includes","forEach","c","indexOf","Dataloader","input_url","keywordList","fetch","then","res","json","result","listChangeCallback","addChangeCallback","getRecords","totalAmount","getTotal","getWordList","root_word","filter","w","words_set","Map","set","get","words_list","entries","val","TopBar","AppBar","Toolbar","IconButton","edge","variant","styles","tooltip","textAlign","padding","font","background","border","borderRadius","pointerEvents","WordChart","data","margin","top","right","left","divElement","clientHeight","width","clientWidth","renderChart","ref","node","svgElement","viewBox","e","xScale","scaleLinear","domain","max","d","nice","range","yScale","scaleBand","selectAll","remove","call","setChartZoom","append","bandwidth","setTooltip","setXAxis","setYAxis","rects","duration","html","pageX","pageY","svg","extent","zoom","scaleExtent","translateExtent","transform","applyY","g","axisTop","tickFormat","format","tickSizeOuter","axisLeft","tickValues","i","Math","round","App","loader","window","location","pathname","className","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9df0bae4.chunk.js","sourcesContent":["export function commaFormat(x: number) : string {\n    if (Number.isNaN(x)) return \"\"\n    let x_str: string = x.toFixed(2)\n    let parts: string[] = x_str.split(\".\")\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    return parts.join(\".\");\n}\n\nexport function KMFormat(x: number) : string {\n    if (Number.isNaN(x)) return \"\"\n    let suffix = \"\";\n    if (x >= 1000000) {\n        suffix = \"M\"\n        x /= 1000000;\n    } else if (x >= 1000) {\n        suffix = \"K\"\n        x /= 1000;\n    }\n    return x.toPrecision(3) + suffix;\n}\n","/**\n * Created by TylerLiu on 2020/04/23.\n */\nimport 'd3-transition';\nimport { select } from 'd3-selection';\nimport React, { Component } from 'react';\nimport ReactWordcloud from \"react-wordcloud\";\nimport {KMFormat} from \"./util\";\n\nexport default class WordCloud extends Component{\n\n    constructor(props) {\n        super(props)\n\n        this.callbacks = {\n            getWordTooltip: word =>`${word.text} has $${KMFormat(word.value)} in the category.`,\n            onWordClick: this.getCallback('onWordClick').bind(this),\n            onWordMouseOut: this.getCallback('onWordMouseOut').bind(this),\n            onWordMouseOver: this.getCallback('onWordMouseOver').bind(this),\n        };\n\n        this.options = {\n            fontFamily: 'impact',\n            fontSizes: [5, 60],\n            fontStyle: 'normal',\n            fontWeight: 'normal',\n            scale: 'log',\n            //spiral: 'archimedean',\n            deterministic: true,\n\n            rotations: 4,\n            rotationAngles: [-45, 90],\n\n            transitionDuration: 200,\n        }\n\n        this.state = {\n            words : [{text: 'Loading...', value: 100}]\n        }\n    }\n\n     componentDidMount() {\n         this.props.dataloader.addWordsCallback(this.setWords.bind(this))\n     }\n\n    render() {\n        return(\n            <div style={this.props.style}>\n                <ReactWordcloud callbacks={this.callbacks} words={this.state.words} options={this.options}/>\n            </div>\n        )\n    }\n\n    getCallback(callback) {\n        return function(word, event) {\n            const isActive = callback !== 'onWordMouseOut';\n            const element = event.target;\n            const text = select(element);\n            text\n                .on('click', (() => {\n                    if (isActive) {\n                        this.props.keywordlist.addWord(word.text);\n                    }\n                }))\n                .transition()\n                .attr('background', 'white')\n                .attr('text-decoration', isActive ? 'underline' : 'none');\n        };\n    }\n\n    setWords(words) {\n        this.setState({\n            words: words\n        })\n    }\n}","/**\n * Created by TylerLiu on 2018/12/23.\n */\nimport React, {Component} from 'react';\nimport {TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter} from \"@material-ui/core\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport {commaFormat} from \"./util\";\n\n//TODO virtualize\n\nexport default class WordCloud extends Component{\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            records : [],\n            order : 'asc',\n            orderBy : null,\n        }\n    }\n\n     componentDidMount() {\n         this.props.dataloader.addRecordCallback(this.setRecords.bind(this))\n     }\n\n    setRecords(records) {\n        this.setState({\n            records: records,\n            order: \"asc\",\n            orderBy: null\n        })\n     }\n\n    handleRequestSort(event, property) {\n        let isAsc = this.state.orderBy === property && this.state.order === \"asc\";\n        let isDesc = this.state.orderBy === property && this.state.order === \"desc\";\n        this.setState({\n            order: isAsc ? \"desc\" : \"asc\",\n            orderBy: isDesc ? null : property,\n        })\n    }\n\n    render() {\n        return(\n            <Paper style={this.props.style}>\n                <TableContainer style={{height: \"100%\"}}>\n                    <Table stickyHeader size=\"small\" aria-label=\"Transaction Records\">\n                        <RecordTableHead order={this.state.order} orderBy={this.state.orderBy}\n                                         onRequestSort={this.handleRequestSort.bind(this)}/>\n                        <TableBody>\n                            {this.stableSort(this.state.records).map((row, index) => (\n                                <TableRow key={index}>\n                                    <TableCell>{new Date(row.date * 1000).toDateString()}</TableCell>\n                                    <TableCell>{row.department}</TableCell>\n                                    <TableCell>{row.description}</TableCell>\n                                    <TableCell>{commaFormat(row.amount)}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                        <TableFooter style={{position: \"sticky\", bottom: 0, backgroundColor: \"#fafafa\", borderTop: 1, borderTopColor: \"#e0e0e0\"}}>\n                            <TableRow>\n                                <TableCell></TableCell>\n                                <TableCell></TableCell>\n                                <TableCell align=\"right\">Total: </TableCell>\n                                <TableCell>\n                                    {commaFormat(this.state.records.reduce((prev, curr) => prev + curr.amount, 0))}\n                                </TableCell>\n                            </TableRow>\n                        </TableFooter>\n                    </Table>\n                </TableContainer>\n            </Paper>\n        )\n    }\n\n    getComparator() {\n        let comparator = (a, b, orderBy) => (a[orderBy] < b[orderBy]) ? -1 : (a[orderBy] > b[orderBy] ? 1 : 0);\n        if (this.state.orderBy === null) return null;\n        return this.state.order === 'asc'\n            ? (a, b) => comparator(a, b, this.state.orderBy)\n            : (a, b) => -comparator(a, b, this.state.orderBy)\n    }\n\n    stableSort(array) {\n        const comparator = this.getComparator()\n        if (comparator === null) return array\n        const stabilizedThis = array.map((el, index) => [el, index])\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0])\n            if (order !== 0) return order\n            return a[1] - b[1]\n        });\n        return stabilizedThis.map((el) => el[0])\n    }\n}\n\nconst headCells = [\n    { id: 'date', label: 'Date' },\n    { id: 'department', label: 'Department' },\n    { id: 'description', label: 'Description' },\n    { id: 'amount', label: 'Amount' },\n];\n\nclass RecordTableHead extends Component {\n\n    createSortHandler(property) {\n        return (event) => this.props.onRequestSort(event, property);\n    }\n\n    render() {\n        return (\n            <TableHead>\n                <TableRow>\n                    {headCells.map((headCell) => (\n                        <TableCell\n                            key={headCell.id}\n                            sortDirection={this.props.orderBy === headCell.id ? this.props.order : false}\n                        >\n                            <TableSortLabel\n                                active={this.props.orderBy === headCell.id}\n                                direction={this.props.orderBy === headCell.id ? this.props.order : 'asc'}\n                                onClick={this.createSortHandler(headCell.id)}\n                            >\n                                {headCell.label}\n                            </TableSortLabel>\n                        </TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n        );\n    }\n}","/**\n * Created by TylerLiu on 2018/12/23.\n */\nimport React, {Component} from 'react';\nimport {Breadcrumbs, Typography} from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport {KMFormat} from \"./util\";\n\nexport default class KeywordCrumb extends Component{\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            numList : 0,\n            amounts : []\n        }\n    }\n\n    componentDidMount() {\n        this.props.dataloader.addAmountCallback((amount)=>this.changeList(amount))\n    }\n\n    render() {\n        let list = this.props.keywordlist.getList()\n        return(\n            <Breadcrumbs separator=\">\" style={this.props.style}>\n                <Link key={-1} color=\"textPrimary\" onClick={()=>this.props.keywordlist.reset()}>Transactions(${this.state.amounts[0]})</Link>\n                {list.slice(0, -1).map((word, index)=>(\n                    <Link key={index} color=\"textSecondary\" onClick={()=>this.props.keywordlist.sliceWord(word)}>{word}(${this.state.amounts[index + 1]})</Link>\n                ))}\n                {list.length > 0 ? (<Typography color=\"textPrimary\" key={list.length}>{list[list.length-1]}(${this.state.amounts[list.length]})</Typography>) : null}\n            </Breadcrumbs>\n        )\n    }\n\n    changeList(amount){\n        const new_length = this.props.keywordlist.getList().length\n        let amount_list = this.state.amounts\n        while (amount_list.length < new_length + 1) amount_list = amount_list.concat(\"\")\n        if (amount_list.length > new_length + 1) amount_list = amount_list.slice(0, new_length + 1)\n        amount_list[new_length] = KMFormat(amount)\n        this.setState({\n            numList: new_length,\n            amounts: amount_list\n        })\n    }\n}\n","\nexport default class KeywordList{\n\n    list: string[]\n    callback: ((l: string[]) => void)[]\n\n    constructor(){\n        this.list = []\n        this.callback = []\n    }\n\n    addChangeCallback(callback: (l: string[]) => void): void {\n        this.callback.push(callback)\n    }\n\n    addWord(word: string): void {\n        if (!this.list.includes(word)) {\n            this.list.push(word)\n            this.callback.forEach((c) => c(this.list))\n        }\n    }\n\n    sliceWord(word: string): void {\n        const index: number = this.list.indexOf(word)\n        if (index !== -1) {\n            this.list = this.list.slice(0, index + 1)\n            this.callback.forEach(c => c(this.list))\n        }\n    }\n\n    reset(): void {\n        this.list = []\n        this.callback.forEach(c => c(this.list))\n    }\n\n    getList(): string[]{\n        return this.list\n    }\n}","import KeywordList from \"./KeywordList\";\n\ninterface DataEntry {\n    date: number,\n    department: string,\n    description: string,\n    amount: number,\n    words: string[]\n}\n\ninterface WordEntry {\n    text: string,\n    value: number\n}\n\nexport default class Dataloader{\n\n    #data: DataEntry[] | null = null\n    #records_callbacks : ((r: DataEntry[]) => void)[] = []\n    #words_callbacks : ((w: WordEntry[]) => void)[] = []\n    #amount_callbacks : ((a: number) => void)[] = []\n    #keywordList: KeywordList\n\n    constructor(input_url : string, keywordList: KeywordList) {\n        fetch(input_url)\n            .then(res => res.json())\n            .then(result =>{\n                this.#data = result\n                this.listChangeCallback()\n            })\n        this.#keywordList = keywordList\n        keywordList.addChangeCallback(() => this.listChangeCallback())\n    }\n\n    listChangeCallback() {\n        const records: DataEntry[] = this.getRecords(this.#keywordList.getList())\n        this.#records_callbacks.forEach(c=>c(records))\n        let totalAmount = this.getTotal(records)\n        this.#amount_callbacks.forEach(c=>c(totalAmount))\n        let words = this.getWordList(records)\n        this.#words_callbacks.forEach(c=>c(words))\n    }\n\n    addRecordCallback(callback: (r: DataEntry[]) => void) {\n        this.#records_callbacks.push(callback)\n    }\n\n    addWordsCallback(callback: (w: WordEntry[]) => void) {\n        this.#words_callbacks.push(callback)\n    }\n\n    addAmountCallback(callback: (a: number) => void) {\n        this.#amount_callbacks.push(callback)\n    }\n\n    getRecords(root_word: string[]): DataEntry[] {\n        if (this.#data === null) {\n            return [{\n                date: 0,\n                department: \"\",\n                description: \"Loading...\",\n                amount: 0,\n                words: []\n            }];\n        }\n\n        if (root_word === null || root_word === [])\n            return this.#data\n\n        let records : DataEntry[] = this.#data.filter(row => {\n            return root_word.map((w) => row.words.includes(w)).reduce((a, b)=>a && b, true)\n        })\n        //records.sort((a, b) => b.amount - a.amount)\n        return records\n    }\n\n    getWordList(records: DataEntry[]) : WordEntry[] {\n        if (this.#data === null) {\n            return [{text: 'Loading...', value: 100}];\n        }\n\n        let words_set = new Map<string, number>()\n        records.forEach(row => {\n            row.words.forEach(w => {\n                words_set.set(w, (words_set.get(w) || 0) + row.amount);\n            })\n        })\n\n        let words_list: WordEntry[] = []\n        for (let [word, val] of words_set.entries()) {\n            words_list.push({text: word, value: val})\n        }\n\n        words_list.sort((a, b) => a.value - b.value)\n\n        return words_list\n    }\n\n    getTotal(records : DataEntry[]){\n        return records.reduce((prev, curr) => prev + curr.amount, 0)\n    }\n}","import {AppBar, IconButton, Toolbar, Typography} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from \"react\";\n\nexport default function TopBar() {\n    return (\n        <AppBar position=\"sticky\">\n            <Toolbar>\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon/>\n                </IconButton>\n                <Typography variant=\"h6\">\n                    USAC Budget/Spendings 2018-2019\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n}","/**\n * Created by TylerLiu on 2020/05/05.\n */\nimport React, { Component } from 'react';\nimport {scaleLinear, scaleBand} from 'd3-scale';\nimport {max} from 'd3-array';\nimport {zoom} from 'd3-zoom';\nimport { select, event } from \"d3-selection\";\nimport {axisTop, axisLeft} from 'd3-axis';\nimport {format} from 'd3-format';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {KMFormat} from \"./util\";\n\nconst styles = {\n    tooltip: {\n        position: \"absolute\",\n        textAlign: \"center\",\n        padding: 5,\n        font: \"12px sans-serif\",\n        background: \"lightsteelblue\",\n        border: 0,\n        borderRadius: 8,\n        pointerEvents: \"none\",\n    }\n}\n\n\nexport default class WordChart extends Component {\n\n    classes\n    divElement\n    svgElement\n    margin\n    xScale\n    yScale\n    height\n    width\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            data: []\n        }\n\n        this.margin = {top: 20, right: 0, bottom: 30, left: 80}\n    }\n\n    componentDidMount() {\n        this.props.dataloader.addWordsCallback(this.setWords.bind(this));\n        this.height = this.divElement.clientHeight\n        this.width = this.divElement.clientWidth\n        this.setState({ height: this.height, width: this.width });\n    }\n\n    render() {\n        this.renderChart()\n        return (\n            <div style={this.props.style} ref={ (divElement) => { this.divElement = divElement } }>\n                <div style={styles.tooltip} ref={(tooltip)=>{this.tooltip = tooltip}}/>\n                    <svg ref={node => this.svgElement = node}\n                         width={this.state.width} height={this.state.height}\n                         viewBox={[0, 0, this.width, this.height]}>\n                    </svg>\n            </div>\n        );\n    }\n\n    setWords(words) {\n        this.setState({\n            data: words.filter(e => e.value > 0)\n        })\n    }\n\n    renderChart(){\n        this.xScale = scaleLinear()\n            .domain([0, max(this.state.data, d => d.value)]).nice()\n            .range([this.margin.left, this.width - this.margin.right])\n\n        this.yScale = scaleBand()\n            .domain(this.state.data.map(d => d.text))\n            .range([this.height - this.margin.bottom, this.margin.top])\n            .padding(0.1)\n\n        select(this.svgElement).selectAll(\"*\").remove()\n        select(this.svgElement).call(this.setChartZoom.bind(this))\n\n        select(this.tooltip).style(\"opacity\", 0)\n\n        select(this.svgElement).append('g')\n            .attr(\"class\", \"bars\")\n            .attr(\"fill\", \"steelblue\")\n            .selectAll(\"rect\")\n            .data(this.state.data)\n            .join(\"rect\")\n            .attr(\"x\", this.xScale(0))\n            .attr(\"y\", d => this.yScale(d.text))\n            .attr(\"height\", this.yScale.bandwidth())\n            .attr(\"width\", d => this.xScale(d.value) - this.xScale(0))\n            .call(this.setTooltip.bind(this))\n\n        select(this.svgElement).append(\"g\")\n            .attr(\"class\", \"x-axis\")\n            .call(this.setXAxis.bind(this));\n\n        select(this.svgElement).append(\"g\")\n            .attr(\"class\", \"y-axis\")\n            .call(this.setYAxis.bind(this));\n    }\n\n    setTooltip(rects) {\n        rects.on(\"mouseover\", d => {\n            select(this.tooltip).transition()\n                .duration(200)\n                .style(\"opacity\", .9);\n            select(this.tooltip).html(d.text + '<br>' + KMFormat(d.value))\n                .style(\"left\", (event.pageX) + \"px\")\n                .style(\"top\", (event.pageY - 28) + \"px\");\n        }).on(\"mouseout\", d=>{\n            select(this.tooltip).transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n        }).on('click', ((d) => {\n                this.props.keywordlist.addWord(d.text);\n        }))\n    }\n\n    setChartZoom(svg) {\n        const margin = this.margin\n        const yScale = this.yScale\n        const setYAxis = this.setYAxis.bind(this)\n        const extent = [[margin.left, margin.top], [this.width - margin.right, this.height - margin.top]];\n        const height = this.height\n\n        svg.call(zoom()\n            .scaleExtent([1, this.state.data.length / 10])\n            .translateExtent(extent)\n            .extent(extent)\n            .on(\"zoom\", zoomed));\n\n        function zoomed() {\n            yScale.range([height - margin.bottom, margin.top].map(d => event.transform.applyY(d)));\n            svg.selectAll(\".bars rect\").attr(\"y\", d => yScale(d.text)).attr(\"height\", yScale.bandwidth());\n            svg.selectAll(\".y-axis\").call(setYAxis);\n        }\n    }\n\n    setXAxis(g){\n        g.attr(\"transform\", `translate(0,${this.margin.top})`)\n            .call(axisTop(this.xScale).tickFormat(format(\"~s\")).tickSizeOuter(0))\n    }\n\n    setYAxis(g){\n        g.attr(\"transform\", `translate(${this.margin.left},0)`)\n            .call(axisLeft(this.yScale)\n                .tickValues(this.yScale.domain().filter((d, i) => (i % Math.max(Math.round(18 / this.yScale.bandwidth()), 1) === 0))))\n            .call(g => g.select(\".domain\").remove())\n    }\n}","import React from 'react';\nimport './App.css';\nimport WordCloud from \"./WordCloud\";\nimport RecordTable from \"./RecordTable\";\nimport KeywordCrumb from \"./KeywordCrumb\";\nimport Paper from \"@material-ui/core/Paper\";\nimport KeywordList from \"./KeywordList\";\nimport Dataloader from \"./Dataloader\";\nimport TopBar from \"./TopBar\";\nimport WordChart from \"./WordChart\";\n\nfunction App() {\n    let list = new KeywordList()\n    let loader = new Dataloader(window.location.pathname + \"/expense_summary.json\", list)\n    return (\n        <div>\n            <TopBar/>\n            <Paper variant=\"outlined\" className=\"App\" style={{margin: '0 10%'}}>\n                <KeywordCrumb style={{margin: 10}} keywordlist={list} dataloader={loader}/>\n                <WordCloud style={{height: '80vh'}} keywordlist={list} dataloader={loader}/>\n                <WordChart style={{height: '80vh', width: '100%'}} keywordlist={list} dataloader={loader} />\n                <RecordTable style={{height: '80vh'}} dataloader={loader}/>\n            </Paper>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}